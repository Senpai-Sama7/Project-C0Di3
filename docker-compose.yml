version: '3.8'

services:
  # Core Agent Application
  core-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: project-c0di3
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - LLM_API_URL=${LLM_API_URL:-http://llama-cpp:8000}
      - LOG_ANALYZER_URL=${LOG_ANALYZER_URL:-http://log-analyzer:5001}
      - MEMORY_ENCRYPTION_KEY=${MEMORY_ENCRYPTION_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - core-agent-network
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: core-agent-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-coreagent}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-core_agent}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - core-agent-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-coreagent}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: core-agent-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - core-agent-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: core-agent-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - core-agent-network
    depends_on:
      - core-agent
    profiles:
      - with-nginx

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local

networks:
  core-agent-network:
    driver: bridge
