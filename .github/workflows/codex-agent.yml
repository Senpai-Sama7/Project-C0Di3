name: Codex Agent - Neuro-Symbolic Optimization

on:
  issue_comment:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  codex-optimization:
    name: Codex Optimization and Verification
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event.issue.pull_request && contains(github.event.comment.body, '/codex apply'))
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install LLVM toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y clang llvm lld
          clang --version
          opt --version
      
      - name: Install project dependencies
        run: npm ci
      
      - name: Create artifacts directory
        run: mkdir -p artifacts
      
      - name: Run verification and benchmarks
        run: |
          bash scripts/bench_verify.sh || true
        env:
          FUSION_ON: '1'
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: codex-artifacts
          path: |
            artifacts/
            !artifacts/**/*.tmp
      
      - name: Generate report
        if: always()
        run: |
          if [ -f artifacts/REPORT.md ]; then
            echo "Report generated successfully"
            cat artifacts/REPORT.md
          else
            echo "No report generated"
          fi
      
      - name: Create or update PR
        if: success()
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          BRANCH_NAME="codex/neuro-symbolic-init-$(date +%s)"
          git checkout -b "$BRANCH_NAME"
          git add -A
          git commit -m "Codex: verified optimization and fused kernels" || echo "No changes to commit"
          git push origin "$BRANCH_NAME"
          
          # Create PR with report as body
          REPORT_BODY="## Codex: Verified Optimization Results\n\n"
          if [ -f artifacts/REPORT.md ]; then
            REPORT_BODY="${REPORT_BODY}$(cat artifacts/REPORT.md)\n\n"
          fi
          REPORT_BODY="${REPORT_BODY}### Changed Files\n\n\`\`\`\n$(git diff --name-only HEAD~1)\n\`\`\`\n\n"
          REPORT_BODY="${REPORT_BODY}### Reproduction Commands\n\n\`\`\`bash\n"
          REPORT_BODY="${REPORT_BODY}git checkout ${BRANCH_NAME}\n"
          REPORT_BODY="${REPORT_BODY}npm ci\n"
          REPORT_BODY="${REPORT_BODY}bash scripts/bench_verify.sh\n"
          REPORT_BODY="${REPORT_BODY}\`\`\`"
          
          gh pr create \
            --title "Codex: verified optimization, fused kernels, and CI hooks" \
            --body "$REPORT_BODY" \
            --label "perf,verification,codex" \
            --head "$BRANCH_NAME" \
            --base "$(git rev-parse --abbrev-ref HEAD)" || echo "PR creation failed or already exists"
